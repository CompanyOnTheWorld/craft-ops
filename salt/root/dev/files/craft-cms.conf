#
# Pass to PHP via FastCGI and serve up static files that exist
#

server {
{% include "stackstrap/nginx/files/common-server-setup.conf" %}

  index index.php;

  # Rewrite rules to allow AWS cloudfront to cache CMS pages
  location = /index.html {
    rewrite /index.html /index.php?p=index last;
  }
  location ~ index.html$ {
    rewrite ^/(.*)/index.html$ /index.php?p=$1? last;
  }

  location / {
    try_files $uri @rewriteapp;
  }

  location @rewriteapp {
    rewrite ^(.*) /index.php?p=$1 last;
  }

  location ~ \.php$ {
    client_max_body_size 20M;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass 127.0.0.1:{{ port }};
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_intercept_errors on;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param SCRIPT_NAME $fastcgi_script_name;
    include fastcgi_params;
  }

  location ~ /\.ht {
    deny all;
  }

  #Proxy pass the harp server
  location /static {
    client_max_body_size 1000M;
    proxy_pass http://127.0.0.1:9000/;
  }

  #Serve all bower compontents as static files
  location /static/vendor {
    alias {{ project_path }}/bower_components; 
  }

  #Proxy pass the wetty server
  location /wetty {
    proxy_pass http://127.0.0.1:3000/wetty;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 43200000;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;
  }

}

# vim: set ft=conf ts=4 sw=4 et sts=4 : 
